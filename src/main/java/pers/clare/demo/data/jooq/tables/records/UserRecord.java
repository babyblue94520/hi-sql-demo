/*
 * This file is generated by jOOQ.
 */
package pers.clare.demo.data.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import pers.clare.demo.data.jooq.tables.User;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record11<Long, String, String, String, Integer, Byte, Byte, Long, Long, Long, Long> {

    private static final long serialVersionUID = -656451461;

    /**
     * Setter for <code>test.user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>test.user.account</code>.
     */
    public void setAccount(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.user.account</code>.
     */
    public String getAccount() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.user.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.user.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>test.user.count</code>.
     */
    public void setCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.user.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>test.user.locked</code>.
     */
    public void setLocked(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.user.locked</code>.
     */
    public Byte getLocked() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>test.user.enabled</code>.
     */
    public void setEnabled(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>test.user.enabled</code>.
     */
    public Byte getEnabled() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>test.user.update_time</code>.
     */
    public void setUpdateTime(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>test.user.update_time</code>.
     */
    public Long getUpdateTime() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>test.user.update_user</code>.
     */
    public void setUpdateUser(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>test.user.update_user</code>.
     */
    public Long getUpdateUser() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>test.user.create_time</code>.
     */
    public void setCreateTime(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>test.user.create_time</code>.
     */
    public Long getCreateTime() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>test.user.create_user</code>.
     */
    public void setCreateUser(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>test.user.create_user</code>.
     */
    public Long getCreateUser() {
        return (Long) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, String, String, Integer, Byte, Byte, Long, Long, Long, Long> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, String, String, Integer, Byte, Byte, Long, Long, Long, Long> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.ACCOUNT;
    }

    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<Integer> field5() {
        return User.USER.COUNT;
    }

    @Override
    public Field<Byte> field6() {
        return User.USER.LOCKED;
    }

    @Override
    public Field<Byte> field7() {
        return User.USER.ENABLED;
    }

    @Override
    public Field<Long> field8() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    public Field<Long> field9() {
        return User.USER.UPDATE_USER;
    }

    @Override
    public Field<Long> field10() {
        return User.USER.CREATE_TIME;
    }

    @Override
    public Field<Long> field11() {
        return User.USER.CREATE_USER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAccount();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Integer component5() {
        return getCount();
    }

    @Override
    public Byte component6() {
        return getLocked();
    }

    @Override
    public Byte component7() {
        return getEnabled();
    }

    @Override
    public Long component8() {
        return getUpdateTime();
    }

    @Override
    public Long component9() {
        return getUpdateUser();
    }

    @Override
    public Long component10() {
        return getCreateTime();
    }

    @Override
    public Long component11() {
        return getCreateUser();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAccount();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Integer value5() {
        return getCount();
    }

    @Override
    public Byte value6() {
        return getLocked();
    }

    @Override
    public Byte value7() {
        return getEnabled();
    }

    @Override
    public Long value8() {
        return getUpdateTime();
    }

    @Override
    public Long value9() {
        return getUpdateUser();
    }

    @Override
    public Long value10() {
        return getCreateTime();
    }

    @Override
    public Long value11() {
        return getCreateUser();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setAccount(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public UserRecord value6(Byte value) {
        setLocked(value);
        return this;
    }

    @Override
    public UserRecord value7(Byte value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UserRecord value8(Long value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public UserRecord value9(Long value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public UserRecord value10(Long value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserRecord value11(Long value) {
        setCreateUser(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, Integer value5, Byte value6, Byte value7, Long value8, Long value9, Long value10, Long value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String account, String name, String email, Integer count, Byte locked, Byte enabled, Long updateTime, Long updateUser, Long createTime, Long createUser) {
        super(User.USER);

        set(0, id);
        set(1, account);
        set(2, name);
        set(3, email);
        set(4, count);
        set(5, locked);
        set(6, enabled);
        set(7, updateTime);
        set(8, updateUser);
        set(9, createTime);
        set(10, createUser);
    }
}
